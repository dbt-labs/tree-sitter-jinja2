name: tree-sitter-jinja2

on: [pull_request]

jobs:

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # commenting out windows and mac for now
        # os: [ubuntu-20.04, macos-10.15, windows-2019]
        os: [ubuntu-20.04, macos-10.15]
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Setup npm
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: make install LOG=true
      - name: Build tree-sitter
        run: make build LOG=true
      - name: Test tree-sitter
        run: make test LOG=true

  build-manylinux:
    needs: [test]
    name: Build linux-py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2010_x86_64
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v1
      - name: Updating path
        run: |
          echo "/opt/python/cp35-cp35m/bin/" >> $GITHUB_PATH
          echo "/opt/python/cp36-cp36m/bin/" >> $GITHUB_PATH
          echo "/opt/python/cp37-cp37m/bin/" >> $GITHUB_PATH
          echo "/opt/python/cp38-cp38/bin/" >> $GITHUB_PATH
          echo "/opt/python/cp39-cp39/bin/" >> $GITHUB_PATH
      - name: Display Python version
        run: python${{ matrix.python-version }} -c "import sys; print(sys.version)"
      - name: Upgrade setuptools and pip
        run: python${{ matrix.python-version }} -m pip install -U setuptools pip
      - name: Generate wheel
        run: python${{ matrix.python-version }} -m pip wheel -v -w dist_tmp bindings/python3
      - name: Run auditwheel
        run: auditwheel repair --plat manylinux2014_x86_64 dist_tmp/tree_sitter_jinja2*.whl -w dist
      - name: Show wheels generated
        run: ls -lh dist
      - uses: actions/upload-artifact@v1
        with:
          name: linux_py${{ matrix.python-version }}
          path: dist/
          retension-days: 5

  build-mac:
    needs: [test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15]
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Build bindings
        run: make bindings LOG=true
      - name: Cache wheel for distribution
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.python-version }}
          path: bindings/python3/dist/*.whl
          retention-days: 5

  publish:
    needs: [build-manylinux, build-mac]
    runs-on: ubuntu-20.04
    steps:
      - name: Fetch wheels from cache
        uses: actions/download-artifact@v2
      - name: Gather wheels
        run: |
          mkdir dist/
          find . -type f -name '*.whl' -exec mv -i '{}' ./dist/ ';'
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - run: pip install wheel twine
      - name: Publish distribution ðŸ“¦ to Test PyPI
        env:
          TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
        run: twine check dist/* && twine upload --repository-url https://test.pypi.org/legacy/ --non-interactive dist/* --verbose

